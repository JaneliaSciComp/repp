params {
    lsf_opts = ''
    runtime_opts = ''
    singularity_cache_dir = "$HOME/.singularity_cache"

    repp_container = 'janeliascicomp/repp:v1.0.0'
    repp_repository = "$HOME/.repp"

    cmd =  ''

    // add database args
    dbname =  ''
    dbcost =  0
    dbpath =  ''

    // make sequence args
    seq_file =  ''
    dbs =  ''
    oligos_manifest =  ''
    assembly_output =  ''
    assembly_output_format =  'CSV'
    make_plasmid_cpus = 1
    make_plasmid_mem_gb = 1
    sequence_identity = 100
}

manifest {
    defaultBranch = 'main'
    description = 'REPP based plasmid assembly'
    nextflowVersion = '>=20.10.0'
}

default_docker_runtime_opts = "-v $PWD:$PWD -v ${params.repp_repository}:${params.repp_repository} ${params.runtime_opts}"
default_singularity_runtime_opts = "--nv -B $PWD -B ${params.repp_repository} ${params.runtime_opts}"

process {
    beforeScript = 'export PROCESS_DIR=`pwd`' 

    withLabel: process_low {
        cpus = 1
        memory = 1.GB
    }
}

profiles {
    debug { 
        process.beforeScript = 'echo $HOSTNAME' 
    }

    standard {
        docker.enabled = false
        singularity.enabled = true
    }

    localdocker {
        docker {
            enabled = true
            temp = 'auto'
            runOptions = default_docker_runtime_opts
        }
        singularity.enabled = false
    }

    aws {
        docker {
            enabled = true
            temp = 'auto'
            runOptions = default_docker_runtime_opts
        }
        singularity.enabled = false
        aws {
            batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
        }
        process {
            executor = 'awsbatch'
            queue = 'janelia-nextflow-tower-connect'
        }
    }

    tower {
        docker.enabled = true
        singularity.enabled = false
        aws {
            batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
        }
    }

    lsf {
        process {
            executor = 'lsf'
            clusterOptions = params.lsf_opts
        }
        docker.enabled = false
        singularity.enabled = true
    }

}